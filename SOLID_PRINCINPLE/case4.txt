Background: A media player handles different media types like audio and video files. It has a MediaFile base class with common methods (play, pause, stop), while AudioFile and VideoFile subclasses may have additional needs (e.g., subtitles for video). The player should be able to manage any file type seamlessly without extra conditions.


Question: How would you structure the MediaFile, AudioFile, and VideoFile classes so the player works consistently with all file types?




Interface ISubTitlAble{
    showSubTitle()
}


class MediaFile{
    media:string;

    constructor(media){
         this.media = media;
    }

    play(){
      
        console.log(`${this.media} is playing`);
    }
    pause(){
        console.log(`${this.media} have paused`);
    }
    stop(){
        console.log(`${this.media} have stoped`);
    }
}

class AudioFile extends MediaFile{

    constructor(media){
        super(media);
    }
}

class VideoFile extends MediaFile implements ISubTitlAble{
   
    constructor(media){
        super(media);
    }

    showSubTitle(){
        console.log(`${this.media} showing subtitles`)
    }
}


class MediaPlayer(){
    private mediaFiles: MediaFile[]=[];
   
    addMediaFiles(mediFile){
        this.push(mediFile);
    }

    iSubTitlAblable(mediaFile){
        return "showSubTitle" in mediaFile;
    }
    play(){

        for (const mediaFile of this.mediaFiles){
              mediaFile.play();
             
            if(this.iSubTitlAblable(mediaFile)){
               (mediaFile as ISubTitlAble).showSubTitle();
            }
           
        }
    }

    stop(){
        for (const mediaFile of this.mediaFiles){
              mediaFile.stop();
               
        }
    }

    pause(){
        for (const mediaFile of this.mediaFiles){
              mediaFile.pause();
               
        }
    }

}


main(){

    mediaPlayer =  new MediaPlayer();
    const videoFile = new VideoFile("Video1.mp4");
    const audioFile = new AudioFile("Song1.mp3");

    mediaPlayer.addMediaFiles(videoFile);
    mediaPlayer.addMediaFiles(audioFile);

    mediaPlayer.play();
    mediaPlayer.pause();
    mediaPlayer.stop();
}